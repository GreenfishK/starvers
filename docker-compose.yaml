version: "3.4"

services:
  download:
    build: 
      context: .
      dockerfile: Dockerfile
      target: final_stage
    image: starvers_eval
    volumes:
      - ${base_host_dir}/output/logs:/starvers_eval/output/logs
      - ${base_host_dir}/rawdata:/starvers_eval/rawdata
      - ./scripts_dev/1_download:/starvers_eval/scripts/1_download # move to image after development has finished
    environment:
      - datasets=${datasets}
    entrypoint: [/starvers_eval/scripts/1_download/download_data.sh]

  clean_raw_datasets:
    build: 
      context: .
      dockerfile: Dockerfile
      target: final_stage
    image: starvers_eval
    volumes:
      - ${base_host_dir}/output/logs:/starvers_eval/output/logs
      - ${base_host_dir}/rawdata:/starvers_eval/rawdata
      - ./scripts_dev/2_clean_raw_datasets:/starvers_eval/scripts/2_clean_raw_datasets # move to image after development has finished
    environment:
      - datasets=${datasets}
    entrypoint: [/starvers_eval/scripts/2_clean_raw_datasets/clean_raw_datasets.sh]
  
  eval_construct_datasets:
    build: 
      context: .
      dockerfile: Dockerfile
      target: final_stage
    image: starvers_eval
    volumes:
      - ${base_host_dir}/output/logs:/starvers_eval/output/logs
      - ${base_host_dir}/output/measurements:/starvers_eval/output/measurements
      - ${base_host_dir}/rawdata:/starvers_eval/rawdata
      - ${base_host_dir}/configs/construct_datasets:/starvers_eval/configs/construct_datasets
      - ${base_host_dir}/databases/construct_datasets:/starvers_eval/databases/construct_datasets
      - ${base_host_dir}/tmp:/tmp
      - ./scripts_dev/3_construct_datasets:/starvers_eval/scripts/3_construct_datasets # move to image after development has finished
    ports:
      - 7400:7200
      - 3050:3030
    entrypoint: ["/starvers_eval/python_venv/bin/python3", "-u", "/starvers_eval/scripts/3_construct_datasets/construct_datasets.py"]
    command: ["bearc", "True", "False", "True", "True"]
  
  construct_datasets:
    build: 
      context: .
      dockerfile: Dockerfile
      target: final_stage
    image: starvers_eval
    volumes:
      - ${base_host_dir}/output/logs:/starvers_eval/output/logs
      - ${base_host_dir}/output/measurements:/starvers_eval/output/measurements
      - ${base_host_dir}/rawdata:/starvers_eval/rawdata
      - ${base_host_dir}/configs/construct_datasets:/starvers_eval/configs/construct_datasets
      - ${base_host_dir}/databases/construct_datasets:/starvers_eval/databases/construct_datasets
      - ${base_host_dir}/tmp:/tmp
      - ./scripts_dev/3_construct_datasets:/starvers_eval/scripts/3_construct_datasets # move to image after development has finished
    environment:
      - datasets=${datasets}
      - skip_change_sets=${skip_change_sets}
      - skip_tb_star_ds=${skip_tb_star_ds}
      - skip_cbng_ds=${skip_cbng_ds}
      - skip_icng_ds=${skip_icng_ds}
    entrypoint: ["/starvers_eval/python_venv/bin/python3", "-u", "/starvers_eval/scripts/3_construct_datasets/construct_datasets.py"]
    command: ["$datasets", "$skip_change_sets", "$skip_tb_star_ds", "$skip_cbng_ds", "$skip_icng_ds"]
  
  ingest:
    build: 
      context: .
      dockerfile: Dockerfile
      target: final_stage
    image: starvers_eval
    volumes:
      - ${base_host_dir}/output/logs:/starvers_eval/output/logs
      - ${base_host_dir}/rawdata:/starvers_eval/rawdata
      - ${base_host_dir}/databases:/starvers_eval/databases
      - ${base_host_dir}/output/measurements:/starvers_eval/output/measurements
      - ${base_host_dir}/configs/ingest:/starvers_eval/configs/ingest
      - ${base_host_dir}/tmp:/tmp
      - ./scripts_dev/4_ingest:/starvers_eval/scripts/4_ingest # move to image after development has finished
    environment:
      - datasets=${datasets}
      - triple_stores=${triple_stores}
      - policies=${policies}
    entrypoint: ["/starvers_eval/scripts/4_ingest/create_and_load_triplestores.sh"]
  
  construct_queries:
    build: 
      context: .
      dockerfile: Dockerfile
      target: final_stage
    image: starvers_eval
    volumes:
      - ${base_host_dir}/output/logs:/starvers_eval/output/logs
      - ${base_host_dir}/queries/final_queries:/starvers_eval/queries/final_queries
      - ./scripts_dev/5_construct_queries:/starvers_eval/scripts/5_construct_queries # move to image after development has finished
    environment:
      - policies=${policies}    
    entrypoint: ["/starvers_eval/python_venv/bin/python3", "-u", "/starvers_eval/scripts/5_construct_queries/construct_queries.py", "$policies"]

  evaluate_single:
    build: 
      context: .
      dockerfile: Dockerfile
      target: final_stage
    image: starvers_eval
    volumes:
      - /mnt/data/starvers_eval_investigate/output/logs:/starvers_eval/output/logs
      - /mnt/data/starvers_eval_investigate/configs/ingest/jenatdb2:/starvers_eval/configs/ingest/jenatdb2
      - /mnt/data/starvers_eval_investigate/databases:/starvers_eval/databases
      - /mnt/data/starvers_eval_investigate/queries/final_queries:/starvers_eval/queries/final_queries
      - /mnt/data/starvers_eval_investigate/output/measurements:/starvers_eval/output/measurements
      - /mnt/data/starvers_eval_investigate/output/result_sets:/starvers_eval/output/result_sets
      - ./scripts_dev/6_evaluate:/starvers_eval/scripts/6_evaluate # move to image after development has finished
    hostname: Starvers
    ports:
      - 7300:7200
      - 3040:3030
    environment:
      - datasets=bearb_hour
      - triple_stores=jenatdb2
      - policies=cb_sr_ng
      - graphdb_port=7200
      - jenatdb2_port=3030
    entrypoint: ["/starvers_eval/scripts/6_evaluate/evaluate.sh"]
  
  evaluate:
    build: 
      context: .
      dockerfile: Dockerfile
      target: final_stage
    image: starvers_eval
    volumes:
      - ${base_host_dir}/output/logs:/starvers_eval/output/logs
      - ${base_host_dir}/configs/ingest/jenatdb2:/starvers_eval/configs/ingest/jenatdb2
      - ${base_host_dir}/databases:/starvers_eval/databases
      - ${base_host_dir}/queries/final_queries:/starvers_eval/queries/final_queries
      - ${base_host_dir}/output/measurements:/starvers_eval/output/measurements
      - ${base_host_dir}/output/result_sets:/starvers_eval/output/result_sets
      - ${base_host_dir}/tmp:/tmp
      - ./scripts_dev/6_evaluate:/starvers_eval/scripts/6_evaluate # move to image after development has finished
    hostname: Starvers
    ports:
      - 7200:7200
      - 3030:3030
    environment:
      - datasets=${datasets}
      - triple_stores=${triple_stores}
      - policies=${policies}
      - graphdb_port=${graphdb_port}
      - jenatdb2_port=${jenatdb2_port}
    entrypoint: ["/starvers_eval/scripts/6_evaluate/evaluate.sh"]

  verify_results:
    build: 
      context: .
      dockerfile: Dockerfile
      target: final_stage
    image: starvers_eval
    volumes:
      - ${base_host_dir}/output/logs:/starvers_eval/output/logs
      - ${base_host_dir}/output/result_sets:/starvers_eval/output/result_sets
      - ./scripts_dev/6_evaluate:/starvers_eval/scripts/6_evaluate # move to image after development has finished
    environment:
      - triple_stores=${triple_stores}
      - policies=${policies}
      - datasets=${datasets}
    entrypoint: ["/starvers_eval/python_venv/bin/python3", "-u", "/starvers_eval/scripts/6_evaluate/verify_results.py"]
    command: ["$triple_stores", "$policies", "$datasets"]
    
  visualize:
    build: 
      context: .
      dockerfile: Dockerfile
      target: final_stage
    image: starvers_eval
    volumes:   
      - ${base_host_dir}/output/logs:/starvers_eval/output/logs
      - ${base_host_dir}/output/figures:/starvers_eval/output/figures
      - ${base_host_dir}/output/measurements:/starvers_eval/output/measurements
      - ./scripts_dev/7_visualize:/starvers_eval/scripts/7_visualize # move to image after development has finished
    environment:
      - policies=${policies}  
      - datasets=${datasets}
    entrypoint: ["/starvers_eval/python_venv/bin/python3", "-u", "/starvers_eval/scripts/7_visualize/visualize.py"]
    command: ["$policies", "$datasets"]

  start_ostrich_endpoint:
    build:
      context: archiving-demo/endpoint
      dockerfile: Dockerfile
    image: ostrich-endpoint
    ports:
      - 42564:42564
    volumes:
      - ${base_host_dir}/rawdata/beart:/var/ostrich

  start_ostrich_webapp:
    build: ./archiving-demo/webapp/
    ports:
      - "3000:3000"
    volumes:
      - ./archiving-demo/webapp/http:/var/https
    extra_hosts:
      - host.docker.internal:host-gateway

